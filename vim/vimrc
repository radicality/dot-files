set nocompatible


"" Being Vundle

filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')


Plugin 'gmarik/Vundle.vim'   "let Vundle manage Vundle, required

" Plugins
Plugin 'tpope/vim-fugitive'
Plugin 'wincent/Command-T'
Plugin 'majutsushi/tagbar'
Plugin 'sjl/gundo.vim'
Plugin 'danro/rename.vim'
Plugin 'scrooloose/syntastic'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'ervandew/supertab'
" Plugin 'lukerandall/haskellmode-vim'
Plugin 'Shougo/vimproc.vim'
Plugin 'bling/vim-airline'
Plugin 'pbrisbin/html-template-syntax'
Plugin 'bitc/vim-hdevtools'
" Plugin 'edkolev/tmuxline.vim'
" Plugin 'eagletmt/ghcmod-vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"" End Vundle


"     SETS      "

set ruler     " show the cursor position all the time
set showcmd   " display incomplete commands
set incsearch " do incremental searching
set backspace=indent,eol,start 	" allow backspacing over everything in insert mode
set number      " line numbers
set autoindent  " autoindent
set ignorecase  " for smartcase to work better
set smartcase   " smart casing when searching
set wildignorecase 
set tabstop=2   " Set tabsize
set softtabstop=2
set shiftwidth=2
set expandtab

set clipboard=unnamed

set wrap
set linebreak
set nolist
set ttyfast
set ttymouse=xterm2

set encoding=utf-8  " Proper encoding
set showmode
set cursorline
set laststatus=2

"set textwidth=0
"set wrapmargin=0
"
let g:airline_powerline_fonts = 1



set history=100" lines of command line history
set undolevels=100" undo levels
set title    " set the terminals title
set visualbell" visual bells
set noerrorbells" no bells
set wildmenu" improved command line completion

set backup" keep a backup file
set backupdir=~/.vim_backups" backup files location
set directory=~/.vim_swaps" swap files location

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>


let mapleader = ","
let maplocalleader = ","

" For quick saving
vnoremap <leader>w <Esc>:w<CR>
nnoremap <leader>w <Esc>:w<CR>

nmap <F8> a<C-R>=strftime("%Y-%m-%d %a %I:%M %p")<CR><Esc>
imap <F8> <C-R>=strftime("%Y-%m-%d %a %I:%M %p")<CR>

nnoremap j gj
nnoremap k gk

nnoremap <leader>n :NERDTreeToggle<CR>
" nnoremap <leader>t :TagbarTogglerCR>

" noremap <leader>o <Esc>:CommandT<CR>
" noremap <leader>O <Esc>:CommandTFlush<CR>
" noremap <leader>m <Esc>:CommandTBuffer<CR>

let g:SuperTabDefaultCompletionType = "context"
let g:tagbar_ctags_bin = "/usr/local/Cellar/ctags/5.8/bin/ctags"
let g:syntastic_haskell_checkers=['hdevtools']
"let g:syntastic_haskell_checkers=['ghc_mod']

" au BufEnter *.hs compiler ghc
let g:haddock_browser="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"

let g:airline_theme="murmur"


" Common misspellings
ab fro for
ab teh the

set guioptions-=r
set guioptions-=L

if has('mouse')
  set mouse=a
endif

if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
  set gfn=Monaco:h13
  set guicursor+=a:blinkon0 " no cursos blinking
  colorscheme Tomorrow-Night-Eighties
endif

if has("autocmd")
  filetype on
  filetype plugin on
  filetype indent on

  autocmd FileType text setlocal textwidth=78
  autocmd FileType text set spell
else
  set autoindent  "if no autoindent
endif
