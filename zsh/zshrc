#------------------------------------------ 
# Options
#------------------------------------------ 
source ~/.zsh/git-prompt/zshrc.sh

# why would you type 'cd dir' if you could just type 'dir'?
setopt auto_cd

# History
HISTSIZE=50000
SAVEHIST=$HISTSIZE
HISTFILE=~/.zsh_history
setopt append_history
setopt share_history
setopt extended_history
setopt hist_ignore_dups
bindkey "^R" history-incremental-search-backward

zmodload zsh/complist
autoload -U compinit && compinit
autoload -U zmv

#------------------------------------------
# Autocompletion
#------------------------------------------
zstyle ':completion:::::' completer _complete _approximate
zstyle ':completion:*' menu select

zstyle ':completion::complete:*' use-cache 1
zstyle ':completion:*' verbose yes

# allow approximate
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# colorizer auto-completion for kill
zstyle ':completion:*:*:kill:*:processes' list-colors "=(#b) #([0-9]#)*=36=31"

# case insensitive completion
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

zstyle ':completion:*' verbose yes
zstyle ':completion:*:descriptions' format '%B%d%b'
zstyle ':completion:*:messages' format '%d'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''
#zstyle ':completion:*' completer _oldlist _expand _force_rehash _complete
zstyle ':completion:*' completer _expand _force_rehash _complete _approximate _ignored

# generate descriptions with magic.
zstyle ':completion:*' auto-description 'specify: %d'

# Don't prompt for a huge list, page it!
zstyle ':completion:*:default' list-prompt '%S%M matches%s'

# Don't prompt for a huge list, menu it!
zstyle ':completion:*:default' menu 'select=0'

# Have the newer files last so I see them first
zstyle ':completion:*' file-sort modification reverse

# color code completion!!!!  Wohoo!
zstyle ':completion:*' list-colors "=(#b) #([0-9]#)*=36=31"


#------------------------------------------
# Colors
#------------------------------------------
# set colors to make terminal pretty!
autoload colors; colors
export CLICOLOR=1

export LS_OPTIONS='--color=auto'
#export LSCOLORS=Exfxcxdxbxegedabagacad
eval "$( gdircolors -b $HOME/.dircolors )"

PROMPT='%{$fg[cyan]%}[%n@%m]%{$reset_color%}$(git_super_status) %{$fg[cyan]%}~%{$reset_color%} '
RPROMPT="[%{$fg[yellow]%}%3c%{$reset_color%}][%{$fg[red]%}%?%{$reset_color%}]" # prompt for right side of screen

export GREP_OPTIONS='--color=auto'
export EDITOR='vim'
export GPG_TTY=$(tty)

#------------------------------------------
# Key Bindings
#------------------------------------------
bindkey '\e[3~' delete-char
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line
bindkey '^?' backward-delete-char
bindkey '^[[1~' beginning-of-line
bindkey '^[[5~' up-line-or-history
bindkey '^[[3~' delete-char
bindkey '^[[4~' end-of-line
bindkey '^[[6~' down-line-or-history
bindkey '^[[A' up-line-or-search
bindkey '^[[D' backward-char
bindkey '^[[B' down-line-or-search
bindkey '^[[C' forward-char

bindkey -v # Because vim

setopt no_list_beep

### 	  PATH		###
export PATH=/Users/rafal/dev/my_scripts:/usr/local/sbin:/usr/local/bin:/Users/rafalio/bin:$PATH
export PATH=/Applications/Muse/:$PATH

 #	ALIASES 	###
alias vi='vi'
alias ls='gls -lXh --group-directories-first $LS_OPTIONS'
alias la='gls -laXh --group-directories-first $LS_OPTIONS'
alias psx="ps aux | grep -i" 
alias reload="exec zsh -l"
alias ltmux="tmux attach || tmux new"


# SSH

alias hostmonster="ssh vlixterc@vlixter.com"
alias linode="ssh rafal@178.79.143.168"
alias fspeech="ssh radicality_rafalio@ssh.phx.nearlyfreespeech.net"

# Play safe!
alias rm="rm -i"
alias mv="mv -i"
alias cp="cp -i"

# Typos
alias cd..="cd .."
alias dl="curl -L -O"

alias bright='ddcctl -d 1 -b '
alias bright-hi='ddcctl -d 1 -b 75'
alias bright-lo='ddcctl -d 1 -b 25'

# Mac OS X local specific things
if [[ "$OSTYPE" =~ "^darwin" ]]; then
    alias preview="/Applications/Preview.app/Contents/MacOS/Preview"
    alias flushdns="dscacheutil -flushcache"
    alias lock="/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine"
    alias vim="mvim -v"
    alias audiorestart="sudo kill `ps -ax | grep 'coreaudiod' | grep 'sbin' |awk '{print $1}'`"
    alias codeforces="python ~/dev/lib/CodeforcesRunner/cf.py"
else
    PROMPT="%{$fg[yellow]%}[%n@%m] % ~%{$reset_color%} "    # Make the prompt yellow if i'm not on my home system but some server
fi

alias llvm-config="llvm-config-3.5"
export JAVA_HOME=`/usr/libexec/java_home -v 11`

function extract {
  if [ -z "$1" ]; then
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
  else
    if [ -f $1 ]; then
      case $1 in
        *.tar.bz2)   tar xvjf $1    ;;
        *.tar.gz)    tar xvzf $1    ;;
        *.tar.xz)    tar xvJf $1    ;;
        *.lzma)      unlzma $1      ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar x -ad $1 ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xvf $1     ;;
        *.tbz2)      tar xvjf $1    ;;
        *.tgz)       tar xvzf $1    ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *.xz)        unxz $1        ;;
        *.exe)       cabextract $1  ;;
        *)           echo "extract: '$1' - unknown archive method" ;;
      esac
    else
      echo "$1 - file does not exist"
    fi
  fi
}

function fastCommit {
  if [ -z "$1" ]; then
    echo "Usage: fastCommit <commitMessage> <?summary> <?testplan>. This will do a lint, commit with the accept2ship tag, and then submit to phabricator"
  else
    if [[ -n $2 ]]; then
      summary="$1. $2"
    else
      summary="$1"
    fi

    if [[ -n $3 ]]; then
      test_plan="$3"
    else
      test_plan="None"
    fi

    msg="[iris] $1

Summary: $summary | #accept2ship

Test Plan: $test_plan 

Reviewers: IrisTeam

Subscribers:

Tasks:

Tags:"
    echo $msg
    (yes | arc lint)
    hg commit -Am "${msg}"
    jf submit --update-fields
  fi
}

